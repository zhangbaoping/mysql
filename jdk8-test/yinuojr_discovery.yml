---
- hosts: 192.168.5.100
  remote_user: root
  vars:
    src_host_path: /home/jekins/.jenkins/workspace/test-yinuojr-discovery/target
    localhost_host_path: /data/backup/yinuojr-discovery/target
    project_name: yinuojr-discovery
    src_host_ip: 192.168.2.40
    dst_host_ip: 192.168.5.100

  tasks:
    - name: create directory
      file: path={{ item }} state=directory
      with_items:
        - "{{ src_host_path }}"
        - "{{ localhost_host_path }}"
        - "{{ src_host_ip }}"
        - "{{ project_name }}"

    - name: create directory
      shell: mkdir -p {{ localhost_host_path }}

    - name: scp src yinuojr-discovery package to localhost
      command: "sshpass -pbubi scp root@{{ src_host_ip }}:{{ src_host_path }}/{{ project_name }}.zip {{ localhost_host_path }}"

    - name: check scp package md5sum to localhost
      command: "ssh root@{{ dst_host_ip }} 'ls -lrt {{ localhost_host_path }}/{{ project_name }}.zip;md5sum {{ localhost_host_path }}/{{ project_name }}.zip'"
      register: check_scp_package
    - debug: msg={{check_scp_package.stdout_lines}}
  
    - name: md5sum src package
      command: "ssh root@{{ src_host_ip }} 'ls -lrt {{ src_host_path }}/{{ project_name }}.zip;md5sum {{ src_host_path }}/{{ project_name }}.zip'"
      register: check_src_package
    - debug: msg={{check_src_package.stdout_lines}}

- hosts: 192.168.6.123
  remote_user: root
  vars:
    src_host_path: /data/backup/yinuojr-discovery/target
    dst_host_path: /data/backup/yinuojr-discovery/target
    project_data_path: /bubidata/server/data
    project_backup_path: /data/backup
    project_name: yinuojr-discovery
    project_run_port: 11009
    src_host_ip: 192.168.5.100
    dst_host_ip: 192.168.6.123
    random_number: "{{ 10000 | random }}"
    
    
  tasks:
    - name: create directory
      file: path={{ item }} state=directory
      with_items:
        - "{{ src_host_path }}"
        - "{{ dst_host_path }}"
        - "{{ project_backup_path }}"
        - "{{ project_name }}"
        - "{{ project_data_path }}"

    - wait_for: path={{ src_host_path }} state=present
    - wait_for: path={{ dst_host_path }} state=present
    - wait_for: path={{ project_backup_path }} state=present
    - wait_for: path={{ project_name }} state=present
    - wait_for: path={{ project_data_path }} state=present

    #- name: check yinuojr_discovery project status
    #  shell: "ps -ef|grep discovery|grep -v grep |awk '{print $2}'"
    #  register: check_out_discovery
    #- debug: msg="{{check_out_discovery.stdout_lines}}"

    - name: 生成时间变量
      command: date +"%Y%m%d%H%M"
      register: date_output

    - shell: 'if [ ! -d /bubidata/server/data/yinuojr-discovery/ ] ; then echo "not exists" ; else echo "exists" ;fi' 
      ignore_errors: true
      register: result    
    - debug: msg="{{result.stdout}}"
    - set_fact: res="{{result.stdout}}"

    - name: 新增服务，解压文件
      unarchive: src={{ src_host_path }}/{{ project_name }}.zip dest={{ project_data_path }}
      when: ( res == "not exists")

    - name: 新增服务，启动服务
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch start
      when: ( res == "not exists")

    - name: 新增服务，检查端口是否存在
      wait_for: port={{ project_run_port }} delay=5 state=started
      when: ( res == "not exists")

    - name: 新增服务，服务启动完成
      shell: echo "Start Successful !!!"
      when: ( res == "not exists")

    - name: 更新服务，服务停止
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch stop
      when: ( res == "exists")

    - name: 更新服务，检查端口是否存在 
      wait_for: port={{ project_run_port }} delay=3 state=stopped timeout=10
      when: ( res == "exists")

    - name: 更新服务，备份现有服务程序
      shell: mv {{ project_data_path }}/{{ project_name}}  {{ project_data_path }}/{{ project_name }}.{{ date_output }}
      when: ( res == "exists")

    - name: 更新服务，解压文件
      unarchive: src={{ dst_host_path }}/{{ project_name }}.zip dest={{ project_data_path }}
      when: ( res == "exists")

    - name: 更新服务，启动服务程序
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch start
      when: ( res == "exists")

    - name: 更新服务，检查端口是否存在
      wait_for: port={{ project_run_port }} delay=5 state=started
      when: ( res == "exists")

    - name: 更新服务，服务启动完成
      shell: echo "Start Successful !!!"
      when: ( res == "exists")
      
