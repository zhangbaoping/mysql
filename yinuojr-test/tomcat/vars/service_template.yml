---
- hosts: "{{ host_ip }}"
  remote_user: "root"
  vars:
    src_host_path: "/data/backup/yinuojr-{{ service_name }}/target"
    dst_host_path: "/data/backup/yinuojr-{{ service_name }}/target"
    project_data_path: "/bubidata/server/data"
    project_backup_path: "/data/backup"
    project_name: "yinuojr-{{ service_name }}"
    project_run_port: "{{ service_port }}"
    
  tasks:
    - file: 
        path: "{{ src_host_path }}"
        state: directory
    - file: 
        path: "{{ dst_host_path }}"
        state: directory
    - file:
        path: "{{ project_backup_path }}"
        state: directory
    - file:
        path: "{{ project_name }}"
        state: directory
    - file:
        path: "{{ project_data_path }}"
        state: directory

    - name: 生成时间变量
      command: date +"%Y%m%d%H%M"
      register: date_output
    - debug: msg={{ date_output.stdout }}

    - name: 判断目录是否存在，不存在返回not exists，存在返回exists 
      shell: 'if [ ! -d {{ project_data_path }}/{{ project_name }} ];then echo "directory not exists";else echo "directory exists";fi' 
      ignore_errors: true
      register: result    
    - debug: msg="{{result.stdout}}"
    - set_fact: res="{{result.stdout}}"

    - name: 新增服务，如果是API服务，需要从生产或者预热对应服务pdf目录拷贝文件到当前服务pdf目录
      shell: echo "需要从生产或者预热api服务pdf目录拷贝文件到当前pdf目录,很重要，很重要，很重要 !!!"
      when: (res == "directory not exists")

    - name: 新增服务，解压文件
      unarchive: src={{ src_host_path }}/{{ project_name }}.zip dest={{ project_data_path }}
      when: (res == "directory not exists")

    - name: 新增服务，启动服务
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch start
      when: (res == "directory not exists")

    - name: 更新服务，停止服务
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch stop
      when: (res == "directory exists")

    - name: 更新服务，检查端口是否关闭
      wait_for: port={{ project_run_port }} delay=3 state=stopped timeout=10
      when: (res == "directory exists")

    - name: 更新服务，备份现有服务程序
      shell: mv {{ project_data_path }}/{{ project_name}} {{ project_backup_path }}/{{ project_name }}.{{date_output.stdout}}
      when: (res == "directory exists")

    - name: 更新服务，解压文件
      unarchive: src={{ dst_host_path }}/{{ project_name }}.zip dest={{ project_data_path }}
      when: (res == "directory exists")

    - name: 更新服务，如果是API服务，拷贝备份文件pdf目录下的所有文件到更新后对应pdf目录
      shell: rm -rf {{ project_data_path }}/{{ project_name}}/conf/pdf/ && cp -a {{ project_backup_path }}/{{ project_name }}.{{date_output.stdout}}/conf/pdf/ {{ project_data_path }}/{{ project_name}}/conf/
      when: (res == "directory exists")
      
    - name: 更新服务，启动服务程序
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch start
      when: (res == "directory exists")

    - name: 删除备份目录
      shell: rm -rf {{ project_backup_path }}/{{ project_name }}

    #- debug: msg="{{ project_name }}服务更新完成 !!!" 
