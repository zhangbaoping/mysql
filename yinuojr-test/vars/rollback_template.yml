---
- hosts: "{{ host_ip }}"
  remote_user: "root"
  vars:
    backup_data_path: "/data/backup"
    project_data_path: "/bubidata/server/data"
    project_name: "yinuojr-{{ service_name }}"
    project_run_port: "{{ service_port }}"
    backup_file_name: "ls -lrt {{ backup_data_path }}|grep {{ project_name }}|tail -n 1"

  tasks:
    - file: 
        path: "{{ backup_data_path }}"
        state: directory
    - file: 
        path: "{{ project_data_path }}"
        state: directory
    - file:
        path: "{{ project_name }}"
        state: directory

    - name: 判断服务进程是否存在
      shell: ps -ef|grep {{ project_name }}|grep launch|awk '{print $2}'
      register: service_pid
    - debug: msg="{{service_pid.stdout}}"

    - name: 根据变量生成进程的返回值状态
      shell: 'if [ {{ service_pid }} != "" ];then echo "process_id exist";else echo "process_id not exist";fi'
      register: process_id
    - set_fact: res="{{process_id.stdout_lines}}"

    - name: 当服务进程存在，停止服务
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch stop
      when: (res == "process_id exist")

    - name: 检查端口是否关闭
      wait_for: port={{ project_run_port }} delay=3 state=stopped timeout=10
      when: (res == "file exist")

    - name: 判断备份文件是否存在，不存在返回file not exist，存在返回file exist 
      shell: 'if [ -f "ls -lrt {{ backup_data_path }}|grep {{ project_name }}|tail -n 1" ];then echo "file not exist";else echo "file exist";fi'
      register: backup_file    
    - debug: msg="{{backup_file.stdout}}"
    - set_fact: res="{{backup_file.stdout}}"

    - name: 生成时间变量
      command: date +"%Y%m%d%H%M"
      register: date_output
    - debug: msg={{ date_output.stdout }}

    - name: 回滚前删除现有服务程序
      shell: mv {{ project_data_path }}/{{ project_name }} {{ project_data_path }}/{{ project_name }}.{{ date_output.stdout }}

    - name: 拷贝备份文件到项目服务目录
      shell: cp -a "{{ backup_data_path }}/{{ backup_file_name }}" {{ project_data_path }}
      when: (res == "file exist")
      
    - name: 启动服务程序性
      shell: source /etc/profile && cd {{ project_data_path }}/{{ project_name }}/bin && ./launch start

    - debug: msg="{{ project_name }} 服务回滚完成"